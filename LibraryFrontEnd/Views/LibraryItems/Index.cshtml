@model IEnumerable<Library.LibraryItem>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New Item</a>
</p>
<table class="table">
    <thead>
    <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]">Sort by @Html.DisplayNameFor(model => model.Type)</a>
    </th>
    <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]">Sort by Category</a>
    </th>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pages)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RunTimeMinutes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsBorrowable)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Borrower)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BorrowDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            Check Out
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
                <br />
                Acronym:
                @{
                    try
                    {
                        <b>(@(string.Concat(item.Title.Split(' ').Select(w => w.First())).ToUpper()))</b>
                    }
                    catch
                    {
                        <b>(@(item.Title[0]))</b>
                    }

                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RunTimeMinutes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsBorrowable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Borrower)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BorrowDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @{
                    if (item.Type != "ReferenceBook" && item.IsBorrowable == true)
                    {
                        <input type="checkbox" class="done-checkbox">
                        <a asp-action="CheckOut" asp-route-id="@item.Id">CheckOut</a>
                    }

                }

            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
